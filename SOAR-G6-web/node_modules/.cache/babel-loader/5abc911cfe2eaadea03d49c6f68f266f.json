{"remainingRequest":"D:\\Go project\\WebTest\\vue-g6-editor-master\\node_modules\\babel-loader\\lib\\index.js!D:\\Go project\\WebTest\\vue-g6-editor-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Go project\\WebTest\\vue-g6-editor-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Go project\\WebTest\\vue-g6-editor-master\\src\\components\\DetailPanel\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Go project\\WebTest\\vue-g6-editor-master\\src\\components\\DetailPanel\\index.vue","mtime":1571212572000},{"path":"D:\\Go project\\WebTest\\vue-g6-editor-master\\babel.config.js","mtime":1571212572000},{"path":"D:\\Go project\\WebTest\\vue-g6-editor-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660287995665},{"path":"D:\\Go project\\WebTest\\vue-g6-editor-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1659582234713},{"path":"D:\\Go project\\WebTest\\vue-g6-editor-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660287995665},{"path":"D:\\Go project\\WebTest\\vue-g6-editor-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1659706998091}],"contextDependencies":[],"result":["import eventBus from \"@/utils/eventBus\";\nimport Grid from \"@antv/g6/build/grid\";\nexport default {\n  data: function data() {\n    return {\n      status: \"canvas-selected\",\n      showGrid: false,\n      page: {},\n      graph: {},\n      item: {},\n      node: {},\n      grid: null\n    };\n  },\n  created: function created() {\n    this.init();\n    this.bindEvent();\n  },\n  methods: {\n    init: function init() {},\n    bindEvent: function bindEvent() {\n      var self = this;\n      eventBus.$on(\"afterAddPage\", function (page) {\n        self.page = page;\n        self.graph = self.page.graph;\n        eventBus.$on(\"nodeselectchange\", function (item) {\n          if (item.select === true && item.target.getType() === \"node\") {\n            self.status = \"node-selected\";\n            self.item = item.target;\n            self.node = item.target.getModel();\n          } else {\n            self.status = \"canvas-selected\";\n            self.item = null;\n            self.node = null;\n          }\n        });\n      });\n    },\n    handleChangeName: function handleChangeName(e) {\n      var model = {\n        label: e\n      };\n      this.graph.update(this.item, model);\n    },\n    changeGridState: function changeGridState(value) {\n      if (value) {\n        this.grid = new Grid();\n        this.graph.addPlugin(this.grid);\n      } else {\n        this.graph.removePlugin(this.grid);\n      }\n    }\n  }\n};",null]}