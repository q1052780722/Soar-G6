{"remainingRequest":"D:\\Go project\\WebTest\\vue-g6-editor-master\\SOAR-G6-web\\node_modules\\babel-loader\\lib\\index.js!D:\\Go project\\WebTest\\vue-g6-editor-master\\SOAR-G6-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Go project\\WebTest\\vue-g6-editor-master\\SOAR-G6-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Go project\\WebTest\\vue-g6-editor-master\\SOAR-G6-web\\src\\components\\Toolbar\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Go project\\WebTest\\vue-g6-editor-master\\SOAR-G6-web\\src\\components\\Toolbar\\index.vue","mtime":1660982796990},{"path":"D:\\Go project\\WebTest\\vue-g6-editor-master\\SOAR-G6-web\\babel.config.js","mtime":1660367946644},{"path":"D:\\Go project\\WebTest\\vue-g6-editor-master\\SOAR-G6-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660287995665},{"path":"D:\\Go project\\WebTest\\vue-g6-editor-master\\SOAR-G6-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1659582234713},{"path":"D:\\Go project\\WebTest\\vue-g6-editor-master\\SOAR-G6-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1660287995665},{"path":"D:\\Go project\\WebTest\\vue-g6-editor-master\\SOAR-G6-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1659706998091}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _toConsumableArray from \"D:/Go project/WebTest/vue-g6-editor-master/SOAR-G6-web/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport eventBus from \"@/utils/eventBus\";\nimport Util from \"@antv/g6/src/util\";\nimport { uniqueId, getBox } from \"@/utils\";\nexport default {\n  data: function data() {\n    return {\n      //剧本相关\t\n      json: {},\n      playbook: \"123\",\n      page: {},\n      graph: {},\n      redoList: [],\n      undoList: [],\n      editor: null,\n      command: null,\n      selectedItem: null,\n      multiSelect: false,\n      addGroup: false\n    };\n  },\n  created: function created() {\n    this.init();\n    this.bindEvent();\n  },\n  watch: {\n    selectedItem: function selectedItem(val) {\n      if (val && val.length > 1) {\n        this.addGroup = true;\n      } else {\n        this.addGroup = false;\n      }\n    }\n  },\n  methods: {\n    open: function open() {\n      this.$alert(this.playbook, '剧本展示', {\n        confirmButtonText: '确定'\n      });\n    },\n    init: function init() {\n      var _this$$parent = this.$parent,\n          editor = _this$$parent.editor,\n          command = _this$$parent.command;\n      this.editor = editor;\n      this.command = command;\n    },\n    bindEvent: function bindEvent() {\n      var _this = this;\n\n      var self = this;\n      eventBus.$on(\"afterAddPage\", function (page) {\n        self.page = page;\n        self.graph = self.page.graph;\n      });\n      eventBus.$on(\"add\", function (data) {\n        _this.redoList = data.redoList;\n        _this.undoList = data.undoList;\n      });\n      eventBus.$on(\"update\", function (data) {\n        _this.redoList = data.redoList;\n        _this.undoList = data.undoList;\n      });\n      eventBus.$on(\"delete\", function (data) {\n        _this.redoList = data.redoList;\n        _this.undoList = data.undoList;\n      });\n      eventBus.$on(\"updateItem\", function (item) {\n        _this.command.executeCommand(\"update\", [item]);\n      });\n      eventBus.$on(\"addItem\", function (item) {\n        _this.command.executeCommand(\"add\", [item]);\n      });\n      eventBus.$on(\"nodeselectchange\", function () {\n        var _this$selectedItem;\n\n        _this.selectedItem = _this.graph.findAllByState(\"node\", \"selected\");\n        _this.selectedItem = (_this$selectedItem = _this.selectedItem).concat.apply(_this$selectedItem, _toConsumableArray(_this.graph.findAllByState(\"edge\", \"selected\")));\n      });\n      eventBus.$on(\"deleteItem\", function () {\n        _this.handleDelete();\n      });\n      eventBus.$on(\"muliteSelectEnd\", function () {\n        _this.multiSelect = false;\n        _this.selectedItem = _this.graph.findAllByState(\"node\", \"selected\");\n      });\n    },\n    handleUndo: function handleUndo() {\n      if (this.undoList.length > 0) this.command.undo();\n    },\n    handleRedo: function handleRedo() {\n      if (this.redoList.length > 0) this.command.redo();\n    },\n    handleDelete: function handleDelete() {\n      if (this.selectedItem.length > 0) {\n        this.command.executeCommand(\"delete\", this.selectedItem);\n        this.selectedItem = null;\n      }\n    },\n    getFormatPadding: function getFormatPadding() {\n      return Util.formatPadding(this.graph.get(\"fitViewPadding\"));\n    },\n    getViewCenter: function getViewCenter() {\n      var padding = this.getFormatPadding();\n      var graph = this.graph;\n      var width = this.graph.get(\"width\");\n      var height = graph.get(\"height\");\n      return {\n        x: (width - padding[2] - padding[3]) / 2 + padding[3],\n        y: (height - padding[0] - padding[2]) / 2 + padding[0]\n      };\n    },\n    handleZoomIn: function handleZoomIn() {\n      var currentZoom = this.graph.getZoom();\n      this.graph.zoomTo(currentZoom + 0.5, this.getViewCenter());\n    },\n    handleZoomOut: function handleZoomOut() {\n      var currentZoom = this.graph.getZoom();\n      this.graph.zoomTo(currentZoom - 0.5, this.getViewCenter());\n    },\n    handleToBack: function handleToBack() {\n      var _this2 = this;\n\n      if (this.selectedItem && this.selectedItem.length > 0) {\n        this.selectedItem.forEach(function (item) {\n          item.toBack();\n\n          _this2.graph.paint();\n        });\n      }\n    },\n    handleToFront: function handleToFront() {\n      var _this3 = this;\n\n      if (this.selectedItem && this.selectedItem.length > 0) {\n        this.selectedItem.forEach(function (item) {\n          if (item.getType() === \"edge\") {// const nodeGroup = this.graph.get(\"nodeGroup\");\n            // const edgeGroup = item.get(\"group\");\n            // nodeGroup.toFront();\n            // edgeGroup.toFront()\n          } else {\n            item.toFront();\n          }\n\n          _this3.graph.paint();\n        });\n      }\n    },\n    handleAutoZoom: function handleAutoZoom() {\n      this.graph.fitView(20);\n    },\n    handleResetZoom: function handleResetZoom() {\n      this.graph.zoomTo(1, this.getViewCenter());\n    },\n    handleMuiltSelect: function handleMuiltSelect() {\n      this.multiSelect = true;\n      this.graph.setMode(\"mulitSelect\");\n    },\n    handleAddGroup: function handleAddGroup() {//TODO 这部分等阿里更新Group之后添加\n      // const model = {\n      //   id: \"group\" + uniqueId(),\n      //   title: \"新建分组\"\n      // };\n      // // this.command.executeCommand(\"add\", \"group\", model);\n      // this.selectedItem.forEach(item => {\n      //   console.log(item);\n      // });\n      //this.getPosition(this.selectedItem);\n    },\n    getPosition: function getPosition(items) {\n      var boxList = [];\n      items.forEach(function (item) {\n        var box = item.getBBox();\n        boxList.push(getBox(box.x, box.y, box.width, box.height));\n      });\n      var minX1, minY1, MaxX2, MaxY2;\n      boxList.forEach(function (box) {\n        if (typeof minX1 == \"undefined\") {\n          minX1 = box.x1;\n        }\n\n        if (typeof minY1 == \"undefined\") {\n          minY1 = box.y1;\n        }\n\n        if (typeof MaxX2 == \"undefined\") {\n          MaxX2 = box.x2;\n        }\n\n        if (typeof MaxY2 == \"undefined\") {\n          MaxY2 = box.y2;\n        }\n\n        if (minX1 > box.x1) {\n          minX1 = box.x1;\n        }\n\n        if (minY1 > box.y1) {\n          minY1 = box.y1;\n        }\n\n        if (MaxX2 < box.x2) {\n          MaxX2 = box.x2;\n        }\n\n        if (MaxY2 < box.y2) {\n          MaxY2 = box.y2;\n        }\n      });\n      var width = MaxX2 - minX1,\n          height = MaxY2 - minY1,\n          x = minX1 + width / 2,\n          y = minY1 + height / 2,\n          id = \"team\" + uniqueId();\n      var model = {\n        id: id,\n        width: width,\n        height: height,\n        x: x,\n        y: y,\n        shape: \"teamNode\"\n      };\n      this.command.executeCommand(\"add\", model); // const item = this.graph.findById(id);\n      // item.get(\"group\").toBack();\n      // const edgeGroup = this.graph.get(\"edgeGroup\");\n      // edgeGroup.toFront();\n      // this.graph.paint();\n    },\n    consoleData: function consoleData() {\n      // this.TestAddGraphFromJson()\n      console.log(this.graph.save());\n    },\n    //将剧本交给上级组件G6Editor，由上级组件来实现剧本展示\n    transferPlaybook: function transferPlaybook() {\n      this.$emit('transferPlaybook', this.playbook);\n      console.log(this.playbook);\n    },\n    // 测试加入节点\n    TestAddPoint: function TestAddPoint() {\n      // let data={\n      //  olor:\"#1890ff\",\n      // \tid:\"node2\",\n      // \timage:\"https://gw.alipayobjects.com/zos/rmsportal/czNEJAmyDpclFaSucYWB.svg\",\n      // \tinPoints:[0,0.5],\n      // \tlabel:\"测试节点\"                                                            ,\n      // \tname:\"测试节点\"                                                               ,\n      // \toffsetX:55                                                                     ,\n      // \toffsetY:24                                                                     ,\n      // \toutPoints:[1,0.5]                                                         ,\n      // \tshape:\"customNode\"                                                             ,\n      // \tsize:[170,34]                                                                  ,\n      // \tstateImage:\"/static/img/ok.463ab0e4.svg\"                                       ,\n      // \ttype:\"node\"                                                                    ,\n      // \tx:187                                                                          ,\n      // \ty:121                                                                          ,\n      // };\n      // this.graph.read()\n      this.command.executeCommand(\"add\", [data]);\n    }\n  },\n  mounted: function mounted() {\n    var that = this;\n    this.$axios.get(\"http://192.168.12.137:8080/playbook/\" + this.$route.params.num).then(function (response) {\n      var data2 = JSON.parse(response.data.json); //存储json、playbook在data()数据中\n\n      that.json = data2;\n      that.playbook = response.data.playbook; // 根据json改变可视化图\n\n      that.graph.read(data2);\n    }, function (err) {\n      console.log(err);\n    });\n  }\n};",null]}